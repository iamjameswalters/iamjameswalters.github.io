<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>james.walters.click</title><link href="https://james.walters.click/" rel="alternate"></link><link href="https://james.walters.click/feeds/all.atom.xml" rel="self"></link><id>https://james.walters.click/</id><updated>2023-01-26T00:00:00-05:00</updated><subtitle>Thoughts and lessons learned along the path of software development.</subtitle><entry><title>The Road Less Traveled: Understanding XPaths</title><link href="https://james.walters.click/the-road-less-traveled-understanding-xpaths.html" rel="alternate"></link><published>2023-01-26T00:00:00-05:00</published><updated>2023-01-26T00:00:00-05:00</updated><author><name>James Walters</name></author><id>tag:james.walters.click,2023-01-26:/the-road-less-traveled-understanding-xpaths.html</id><summary type="html">&lt;p&gt;The other day I started writing a web automation tool to do some chores for me at work. This was my first time using &lt;a href="https://www.selenium.dev/"&gt;Selenium&lt;/a&gt;, a handy dandy library for driving web browsers in code.&lt;/p&gt;
&lt;p&gt;When it comes to getting a hold of elements in the page you want to ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;The other day I started writing a web automation tool to do some chores for me at work. This was my first time using &lt;a href="https://www.selenium.dev/"&gt;Selenium&lt;/a&gt;, a handy dandy library for driving web browsers in code.&lt;/p&gt;
&lt;p&gt;When it comes to getting a hold of elements in the page you want to interact with, Selenium offers the usual ID and class-based CSS selectors. Since I was trying to navigate a page written in React though, most of that information was &lt;a href="https://www.reddit.com/r/webdev/comments/lucdnp/why_are_class_names_like_this_in_facebook_and/"&gt;randomly generated&lt;/a&gt;. I needed to get at elements by grabbing onto an easily accessible anchor, then using it as a reference point from which to step through the document tree and get at what I was looking for. Since it's 2023, I of course expected to use some facsimile to the &lt;a href="https://developer.mozilla.org/en-US/docs/Web/API/Document_Object_Model/Introduction"&gt;Javascript DOM API&lt;/a&gt;. A &lt;code&gt;.parentElement&lt;/code&gt; here, a &lt;code&gt;.firstChild&lt;/code&gt; there, and I'd be able to grab that pesky button nested within three generic &lt;code&gt;&amp;lt;div&amp;gt;&lt;/code&gt;s and click it. &lt;a href="https://www.crummy.com/software/BeautifulSoup/bs4/doc/"&gt;BeautifulSoup&lt;/a&gt; works this way, why wouldn't Selenium?&lt;/p&gt;
&lt;p&gt;It turns out that, no, Selenium does &lt;em&gt;not&lt;/em&gt; work this way. For whatever reason, instead of something resembling the DOM API, Selenium uses &lt;a href="https://en.wikipedia.org/wiki/XPath"&gt;XPaths&lt;/a&gt;. When I first started trying to write these things, they struck me as a bit ersatz, landing somewhere along the spectrum between filepaths and regular expressions. But I have to say, they've grown on me a bit, mostly because they're far and away the best tool Selenium gives you for finding elements on the page. &lt;/p&gt;
&lt;h2&gt;Happy Little (Document) Trees üå≥Ô∏è&lt;/h2&gt;
&lt;p&gt;XPaths (the XML Path Language) are based around the idea of seeing the HTML document as a tree of nodes. Let's take the following HTML for our examples:&lt;/p&gt;
&lt;pre&gt;&lt;code class="language-markup"&gt;
&lt;script type="prism-html-markup"&gt; 
&lt;html&gt;
  &lt;body&gt;
    &lt;h1&gt;Hello World!&lt;/h1&gt;
    &lt;p&gt;
      I'd like to welcome you all to this web page. Check out my stuff!
    &lt;/p&gt;
    &lt;p id="label"&gt;Things I like:&lt;/p&gt;
    &lt;ul&gt;
      &lt;li&gt;Cats&lt;/li&gt;
      &lt;li&gt;Video games&lt;/li&gt;
      &lt;li&gt;Pizza&lt;/li&gt;
    &lt;/ul&gt;
    &lt;button&gt;
      &lt;span style="font-weight: bold;"&gt;Enjoy this page?&lt;/span&gt; Let me know!
    &lt;/button&gt;
  &lt;/body&gt;
&lt;/html&gt;
&lt;/script&gt;&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;If we wanted to write an XPath to target the header at the top of the page, we might write something like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/html/body/h1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Let's break that down. The opening slash &lt;code&gt;/&lt;/code&gt; means the root of the document, the beginning of everything. This is very similar to the root &lt;code&gt;/&lt;/code&gt; in &lt;a href="https://en.wikipedia.org/wiki/Root_directory"&gt;UNIX filepaths&lt;/a&gt;. There's only one element in the root of our document: &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt;. So, that's what we type next. Then, within the &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; tag, we select the &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; tag, and then the &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; within it. Because this XPath starts at the root of our document and walks through nodes in the tree to get to the one we want, it's kind of like an absolute filepath.&lt;/p&gt;
&lt;p&gt;Pretty straightforward. But, here's another way we could get at that header:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;//h1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;What's going on here? Whereas the single slash &lt;code&gt;/&lt;/code&gt; means that what comes after it must be immediately within the node that comes before the slash, the double slash &lt;code&gt;//&lt;/code&gt; means that it should be &lt;em&gt;somewhere&lt;/em&gt; inside it. It allows us to find things that are nested a few layers in. So in this case, we're looking for an &lt;code&gt;&amp;lt;h1&amp;gt;&lt;/code&gt; that's somewhere within the root of the document.&lt;/p&gt;
&lt;p&gt;Here's another example of this in action:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/html/body//span
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This XPath says that in the root of our document there should be a &lt;code&gt;&amp;lt;html&amp;gt;&lt;/code&gt; node, and within that a &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt; node. Then, &lt;em&gt;anywhere&lt;/em&gt; within &lt;code&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, we want a &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt;. This would select the &lt;code&gt;&amp;lt;span&amp;gt;&lt;/code&gt; from our example, even though it's inside a &lt;code&gt;&amp;lt;button&amp;gt;&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;So far our XPaths have only matched one node in our document. But what do we do if we want to select a specific item from a handful of nodes that match our XPath? Let's look at our next example:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/html/body/ul/li
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;You probably guessed that this XPath selects an &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; node in our unordered list. But which one? That XPath matches all three list items (and left this way, would return them all). &lt;/p&gt;
&lt;p&gt;We can use an index to get at a specific node matching the XPath. If we want to select "Video Games", we can modify our XPath this way:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/html/body/ul/li[2]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that XPath indexes are &lt;strong&gt;not&lt;/strong&gt; like Python indexes&amp;mdash;they start at &lt;code&gt;1&lt;/code&gt;, not &lt;code&gt;0&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;Predicate Predicaments ü§îÔ∏è&lt;/h2&gt;
&lt;p&gt;Those brackets &lt;code&gt;[]&lt;/code&gt; in the last example constitute a predicate clause. They allow you to specify something that should be true about the element your selecting. In this case, we were specifying that the &lt;code&gt;&amp;lt;li&amp;gt;&lt;/code&gt; we select should be the second child of the &lt;code&gt;&amp;lt;ul&amp;gt;&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;There are other predicates available for us. For instance, we can predicate based on an element's property:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;@id=&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This XPath selects a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; node that has an &lt;code&gt;id&lt;/code&gt; property with a value of &lt;code&gt;label&lt;/code&gt;. &lt;/p&gt;
&lt;p&gt;You might also be wondering, is it possible to select the value of the &lt;code&gt;id&lt;/code&gt; itself? Why yes, you can!&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;body&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="nv"&gt;@id&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;This XPath would select the value of the &lt;code&gt;id&lt;/code&gt;&amp;mdash;that is, it would return the string &lt;code&gt;label&lt;/code&gt;.&lt;/p&gt;
&lt;p&gt;A particularly helpful predicate we can use is checking an element's text with the &lt;code&gt;text()&lt;/code&gt; function. For example, if we wanted to select the list item that says "Cats", we could do so like this:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;//li[text()=&amp;#39;Cats&amp;#39;]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Note that this will only work for an &lt;em&gt;exact&lt;/em&gt; match. The entire text must be "Cats". If you want to check if an element's text &lt;em&gt;contains&lt;/em&gt; something, well, you'll need the &lt;code&gt;contains()&lt;/code&gt; function:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;/html//p[contains(text(), &amp;#39;like&amp;#39;)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code&gt;contains()&lt;/code&gt; function takes two positional arguments: the first for the thing to check, and the second for the value to look for. In this expression, we're looking for a &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; element whose text contains &lt;code&gt;like&lt;/code&gt;. Since both &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; tags in our example have the word 'like' in them, they both get selected. &lt;/p&gt;
&lt;p&gt;Predicates can also be chained. If we wanted to narrow down our selection to the &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt; with &lt;code&gt;id="label"&lt;/code&gt;, we can add that predicate:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;html&lt;/span&gt;&lt;span class="o"&gt;//&lt;/span&gt;&lt;span class="n"&gt;p&lt;/span&gt;&lt;span class="o"&gt;[&lt;/span&gt;&lt;span class="n"&gt;contains(text(), &amp;#39;like&amp;#39;)&lt;/span&gt;&lt;span class="o"&gt;][&lt;/span&gt;&lt;span class="n"&gt;@id=&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span class="o"&gt;]&lt;/span&gt;&lt;span class="w"&gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;!--
Actually, there's another issue lurking here, one that gave me quite a headache.

If we wanted to try and select our button based on it containing the phrase "Let me know!", we might try this:


&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;//button[contains(text(), &amp;#39;Let me know!)]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;



But this won't work. How come?

After some spelunking, I came across a [Stack Overflow answer](https://stackoverflow.com/questions/3655549/xpath-containstext-some-string-doesnt-work-when-used-with-node-with-more) (of course) that explained it. I'll leave the details of that answer to you, but to sum it up, because the button contains not just text but a `&lt;span&gt;` element as well, `text()` returns a *list* of nodes. We then want to check *each* of those nodes (one of which is the "Let me know!" text) for a match of our string. In order to do that, we need something like this:


--&gt;

&lt;h2&gt;Additional Resources üìöÔ∏è&lt;/h2&gt;
&lt;p&gt;We've only scratched the surface of XPath syntax. If you're looking for a deeper dive, I found the cheat sheet at &lt;a href="https://devhints.io/xpath"&gt;devhints.io&lt;/a&gt; incredibly helpful. Not only does it get into a wide variety of XPath syntax, but it also offers some translation between query paradigms you might be more familiar with, such as CSS selectors or JQuery. It has some helpful notes about a few gotchas in there&amp;mdash;think you know how to write an XPath querying an element's class? &lt;a href="https://devhints.io/xpath#class-check"&gt;Think again!&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Finally, I think that the single best tool for wrangling with XPaths is hidden within your browser's devtools. I've yet to check Firefox, but using Chromium-based browsers like Brave and Edge, I learned that you can inspect an element, right-click on it in the code view, and under the "Copy" option, you can copy an XPath for that element. This can help a lot if you're trying to figure out how to write an XPath for something in Selenium! &lt;/p&gt;
&lt;p&gt;&lt;img alt="Right-click to copy an element's XPath" src="https://james.walters.click/images/xpath1.png"&gt;&lt;/p&gt;
&lt;p&gt;Also, using Ctrl-F in that inspector will let you test out XPaths and see which elements on the page satisfy it&amp;mdash;just write your XPath in the Ctrl-F dialog and massage it until it selects what you're looking for.&lt;/p&gt;
&lt;p&gt;&lt;img alt="Type XPath expressions right into Ctrl-F to test" src="https://james.walters.click/images/xpath2.png"&gt;&lt;/p&gt;
&lt;p&gt;So there you go, a whole different way to navigate HTML documents that was hiding right under our noses. The XPath road may be less traveled that the DOM highway, but I think I might be taking it a little more often from now on.&lt;/p&gt;</content><category term="Web"></category><category term="Selenium"></category><category term="XPaths"></category><category term="Web Scraping"></category><category term="HTML"></category><category term="XML"></category></entry><entry><title>Confessions of a Linux Grandpa: An Oral History #2</title><link href="https://james.walters.click/confessions-of-a-linux-grandpa-an-oral-history-2.html" rel="alternate"></link><published>2022-10-28T00:00:00-04:00</published><updated>2022-10-28T00:00:00-04:00</updated><author><name>James Walters</name></author><id>tag:james.walters.click,2022-10-28:/confessions-of-a-linux-grandpa-an-oral-history-2.html</id><summary type="html">&lt;p&gt;Hello again Sparky! Have you come for another story about the glory days of desktop Linux? Well who am I to disappoint? üë¥Ô∏è&lt;/p&gt;
&lt;p&gt;Now, where did we leave off? Oh yes! I was running Ubuntu on the old Toshiba...&lt;/p&gt;
&lt;h2&gt;Grandpa, what was Ubuntu like?&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Gutsy Gibbon" src="https://james.walters.click/images/ubuntu-7-10-gutsy.png"&gt;&lt;/p&gt;
&lt;p&gt;This was Ubuntu, at the end of ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hello again Sparky! Have you come for another story about the glory days of desktop Linux? Well who am I to disappoint? üë¥Ô∏è&lt;/p&gt;
&lt;p&gt;Now, where did we leave off? Oh yes! I was running Ubuntu on the old Toshiba...&lt;/p&gt;
&lt;h2&gt;Grandpa, what was Ubuntu like?&lt;/h2&gt;
&lt;p&gt;&lt;img alt="Gutsy Gibbon" src="https://james.walters.click/images/ubuntu-7-10-gutsy.png"&gt;&lt;/p&gt;
&lt;p&gt;This was Ubuntu, at the end of 2007. It was just then three years old. &lt;/p&gt;
&lt;p&gt;It was &lt;a href="https://en.wikipedia.org/wiki/Ubuntu_version_history#Ubuntu_7.10_(Gutsy_Gibbon)"&gt;Gutsy&lt;/a&gt;. It was &lt;a href="https://en.wikipedia.org/wiki/Ubuntu_philosophy"&gt;human&lt;/a&gt;. It was &lt;span style="color: orange"&gt;orange&lt;/span&gt;. &lt;/p&gt;
&lt;p&gt;And, it made &lt;a href="https://www.youtube.com/watch?v=NL3c4l6G6pM"&gt;this sound&lt;/a&gt; when you logged in.&lt;/p&gt;
&lt;p&gt;What you're looking at there in terms of the desktop is &lt;a href="https://en.wikipedia.org/wiki/GNOME#GNOME_2"&gt;GNOME 2&lt;/a&gt;. It offered split panels, one at the top for application menus and launchers (as well as task bar applets), and one on the bottom for window management and virtual desktops. &lt;/p&gt;
&lt;p&gt;Ah, how I &lt;em&gt;love&lt;/em&gt; those menus&amp;mdash;instead of cramming everything into one Start menu on Windows, here I had three distinct menus: one for applications, one for locations and folders on disk, and one for settings. üòôÔ∏èü§åÔ∏è&lt;/p&gt;
&lt;p&gt;It came with Firefox 2, by the way.&lt;/p&gt;
&lt;p&gt;I mentioned previously that my wireless card didn't work on this release: in order to get it working, I had to download the Windows driver from Realtek and install it with &lt;a href="https://en.wikipedia.org/wiki/NDISwrapper"&gt;&lt;code&gt;ndis-wrapper&lt;/code&gt;&lt;/a&gt;. This was a common problem in those days, it would be a few years before the wifi situation improved on Linux. As for this laptop, a driver would make its way into the kernel in the very next release&amp;mdash;it worked out of the box in 8.04 Hardy Heron.&lt;/p&gt;
&lt;p&gt;Speaking of installing stuff, there was no "app store" like there is these days, Ubuntu Software Centre [sic] or GNOME Software or whatever. Back then, you had &lt;a href="https://en.wikipedia.org/wiki/Synaptic_(software)"&gt;Synaptic Package Manager&lt;/a&gt;, which was itself rather new still. It is, essentially, a graphical browser of the packages in the repositories you were configured to use. I still install it on my machines today&amp;mdash;it's quite handy to have around when you need to look at what's inside a metapackage or don't want to have to reach for &lt;code&gt;apt&lt;/code&gt;.&lt;/p&gt;
&lt;h2&gt;We called it "bling" ü•áÔ∏è&lt;/h2&gt;
&lt;p&gt;As a devoted Linux user, I was eager to brandish that identity however I could. You might know of a little computer company in Denver called System76. They've certainly come along way over the last 15 years or so. Back in the day, they would &lt;a href="https://web.archive.org/web/20080430063103/http://system76.com/article_info.php?articles_id=9"&gt;send you some free stickers&lt;/a&gt; if you sent in a self-addressed envelope. They were a parody of the OS badges that computers came with that said "Powered by Windows XP" and the like. Here's what they looked like: &lt;/p&gt;
&lt;p&gt;&lt;img alt="Powered by Ubuntu" src="https://james.walters.click/images/powered-by-ubuntu.png"&gt;&lt;/p&gt;
&lt;p&gt;When I sent for mine, I received not only the OS badges, but also some Ubuntu logos for overlaying the &lt;span style="text-decoration: line-through"&gt;Windows key&lt;/span&gt; &lt;a href="https://en.wikipedia.org/wiki/Super_key_(keyboard_button)"&gt;super key&lt;/a&gt;. üòôÔ∏èü§åÔ∏è&lt;/p&gt;
&lt;p&gt;They don't have the OS badges anymore, but System76 will &lt;a href="https://system76.com/merch/stickers"&gt;still send you stickers today&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I also went as far as to register this laptop on some list of registered Linux machines I found out there on the web. The home page would list how many registered Linux computers they were tracking. Of course, this was hardly scientific, it was entirely opt-in and who knows who had actually heard of it? I had discovered it through a badge in someone's forum signature containing their "ID number".&lt;/p&gt;
&lt;p&gt;Alas, I'm afraid the name and URL of this site have long ago passed from Linux Grandpa's memory.&lt;/p&gt;
&lt;h2&gt;On the Perils of Dual Booting&lt;/h2&gt;
&lt;p&gt;I'll close by sharing an early blunder, perhaps my first with Linux.&lt;/p&gt;
&lt;p&gt;After installing this and playing around with it for a bit, I decided that I wanted to go back to Windows (this laptop came with Vista). This was only my first foray into Linux, and while I enjoyed it, I was ready to return to the safety of home.&lt;/p&gt;
&lt;p&gt;I hadn't &lt;a href="https://en.wikipedia.org/wiki/Disk_formatting#REFORMAT"&gt;nuked and paved&lt;/a&gt; Windows; instead, I installed Ubuntu in a &lt;a href="https://en.wikipedia.org/wiki/Multi-booting#Microsoft_Windows_and_Linux"&gt;dual boot&lt;/a&gt; setup. This meant that I split the disk into two partitions: one had Windows, the other Ubuntu. Going back to normal should be as simple as wiping out the Ubuntu side.&lt;/p&gt;
&lt;p&gt;So, that's exactly what I did. And after completing that operation, I rebooted and...the computer couldn't boot.&lt;/p&gt;
&lt;p&gt;The problem? The &lt;a href="https://en.wikipedia.org/wiki/Master_boot_record"&gt;master boot record&lt;/a&gt; (MBR) was pointing to something that didn't exist.&lt;/p&gt;
&lt;p&gt;The master boot record was a little (512 bytes) sector that told the computer where to boot from. As computers (and kernels) grew to become larger and more complex, the MBR would just point to a bootloader, which would take care of the rest.&lt;/p&gt;
&lt;p&gt;Originally, Windows had made the MBR point to its own bootloader. When I installed Ubuntu, it had to rewrite the MBR to point to &lt;a href="https://en.wikipedia.org/wiki/GNU_GRUB"&gt;&lt;code&gt;GRUB&lt;/code&gt;&lt;/a&gt;, which would offer boot options for both Ubuntu and Windows.&lt;/p&gt;
&lt;p&gt;Well, when I wiped out my Ubuntu partition, I also wiped out GRUB, which meant that the MBR was pointing to something that didn't exist.&lt;/p&gt;
&lt;p&gt;Fortunately, with a little Googling, this wasn't &lt;em&gt;too&lt;/em&gt; difficult to fix: I reached for my trusty Windows install disc, and booted into the recovery utility. From there, I accessed some sort of recovery shell that let me run some command incantation involving a &lt;code&gt;/fixmbr&lt;/code&gt; flag or something, and it repaired the MBR.&lt;/p&gt;
&lt;p&gt;Of course, this was all long enough ago that computers still used MBRs&amp;mdash;do we still use them on &lt;a href="https://en.wikipedia.org/wiki/UEFI#Disk_device_compatibility"&gt;UEFI&lt;/a&gt; machines? ¬Ø\_(„ÉÑ)_/¬Ø&lt;/p&gt;
&lt;p&gt;At any rate, this was the first (not the last!) time I got myself out of a Linux pickle. At this early stage, it's a good thing I managed it&amp;mdash;if I'd had to go groveling to my dad and have him fix my computer, he surely would have discouraged me from any further experiments.&lt;/p&gt;
&lt;p&gt;That's all for this time, Sparky! As a reward for your attention, enjoy yourself another ASCII Original.&lt;/p&gt;
&lt;p&gt;&lt;img alt="ASCII Original" src="https://james.walters.click/images/asciioriginal.png"&gt;&lt;/p&gt;
&lt;footer style="text-align: center;font-weight: bold;"&gt;
Wait, I'm lost&amp;mdash;&lt;a href="https://james.walters.click/tag/linux-grandpa.html"&gt;start from the beginning&lt;/a&gt;!
&lt;/footer&gt;</content><category term="Linux"></category><category term="Linux Grandpa"></category><category term="oral histories"></category></entry><entry><title>Software Development for the Masses</title><link href="https://james.walters.click/software-development-for-the-masses.html" rel="alternate"></link><published>2022-09-19T00:00:00-04:00</published><updated>2022-09-19T00:00:00-04:00</updated><author><name>James Walters</name></author><id>tag:james.walters.click,2022-09-19:/software-development-for-the-masses.html</id><summary type="html">&lt;p&gt;Some years ago, I was kicking around in the &lt;a href="https://ubuntu-mate.org/irc/"&gt;Ubuntu MATE IRC room&lt;/a&gt;, and I asked &lt;a href="https://wimpress.com/"&gt;Martin Wimpress&lt;/a&gt; for his advice on getting started with programming. I've &lt;a href="https://james.walters.click/confessions-of-a-linux-grandpa-an-oral-history-1.html"&gt;noted previously&lt;/a&gt; my fascination with operating systems, so I was expecting that the man behind my distro of choice would refer me to ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Some years ago, I was kicking around in the &lt;a href="https://ubuntu-mate.org/irc/"&gt;Ubuntu MATE IRC room&lt;/a&gt;, and I asked &lt;a href="https://wimpress.com/"&gt;Martin Wimpress&lt;/a&gt; for his advice on getting started with programming. I've &lt;a href="https://james.walters.click/confessions-of-a-linux-grandpa-an-oral-history-1.html"&gt;noted previously&lt;/a&gt; my fascination with operating systems, so I was expecting that the man behind my distro of choice would refer me to a great resource on C. I was a little miffed when he instead pointed me toward Python.&lt;/p&gt;
&lt;p&gt;He told me, to my surprise and interest, that he had built the fantastic Ubuntu MATE &lt;a href="https://ubuntu-mate.org/features/welcome/"&gt;Welcome app&lt;/a&gt; (which is &lt;a href="https://ubuntubudgie.org/"&gt;often imitated&lt;/a&gt;) with Python, along with some webby stuff for the frontend. I didn't walk away from that conversation and go learn Python, but it did sow a seed in the back of my mind.&lt;/p&gt;
&lt;h2&gt;How was your weekend?&lt;/h2&gt;
&lt;p&gt;It is often quipped, "I learned Python&amp;mdash;it was a great weekend," on account of the ease with which Python is picked up. I lived a version of that story. My team at work stewards a terrible internal web app that we've dreamed of replacing for years. But, we're not developers. We've &lt;em&gt;had&lt;/em&gt; developers crop up among our ranks, but that's quite outside the scope of the job. But my manager and I came back around to this conversation late last year, and in a moment of my life where I was battling personal demons in the loneliness and dangerous boredom of working from home during the COVID-19 pandemic, I was ready to dive in when he suggested doing it ourselves with Python and Django.&lt;/p&gt;
&lt;p&gt;I bought a subscription to Codecademy Pro (I think I'd recommend &lt;a href="https://realpython.com/"&gt;RealPython&lt;/a&gt; today if you're looking to learn), and spent the next couple of months hammering at some Python and Django courses. By mid-January, we were ready to break ground.&lt;/p&gt;
&lt;h2&gt;Champagne üçæ and Beer üç∫&lt;/h2&gt;
&lt;p&gt;The end of that story is that I'm a Python developer. I continue to explore and learn more about the language, and it's the thing I reach for to solve a problem. So when I started this blog, I felt the need to address, at least briefly, why I like and use Python.&lt;/p&gt;
&lt;p&gt;But lots of people are doing that, because Python's great. The internet doesn't need another article about why Python's great. So, I'm trying not to do that here. But what I'd like to do is comment on something that is sometimes (albeit not always) overlooked.&lt;/p&gt;
&lt;p&gt;I remember years ago hearing Rachel Ray (I am a cultural dinosaur, you know) talk about being offered her TV show with Food Network. She protested at first, saying "I'm not a good fit, you guys are champagne, I'm beer." But they insisted that was exactly what they liked about her.&lt;/p&gt;
&lt;p&gt;Python's kind of the beer of the programming world. I do &lt;strong&gt;&lt;em&gt;not&lt;/em&gt;&lt;/strong&gt; mean by that to say that it is unrefined&amp;mdash;quite to the contrary, the Python community has assembled &lt;a href="https://en.wikipedia.org/wiki/Python_(programming_language)#Design_philosophy_and_features"&gt;sophisticated standards&lt;/a&gt; around how code should be written. What I mean is it's accessible; it has an appeal to people that are joining the programming community&amp;mdash;or perhaps, even people who are programming &lt;em&gt;outside&lt;/em&gt; of that community&amp;mdash;which other languages do not have. Why?&lt;/p&gt;
&lt;p&gt;Because they're champagne. They're languages written by pie-in-the-sky computer scientists, used by professional programmers who have learned how to think like a programmer, and have &lt;em&gt;un-&lt;/em&gt;learned how to think about programming like a regular person. The average person learning Python today isn't like me, who was happy to learn it for the joy of programming. The average Python beginner is a gradeschooler learning their first programming language, or an accountant who's sick of &lt;a href="https://en.wikipedia.org/wiki/Visual_Basic_for_Applications"&gt;VBA&lt;/a&gt;, or a scientist or statistician who just wants to run some quick analysis on some data and get it into a graph. These people aren't programmers by trade, and they don't care about what data type a variable is or why object-oriented programming is great or why you shouldn't manage state that way or how they could have written that &lt;code&gt;for&lt;/code&gt; loop more efficiently so that it ran 1048ms faster.&lt;/p&gt;
&lt;p&gt;They just want to do something. Python, more than any other language, stays out of the way and lets them do it. It doesn't make them manage memory, it doesn't make them trip on missing semicolons, it doesn't make them read through a bunch of noisy syntax. Whatever someone's trying to do, &lt;a href="https://peps.python.org/pep-0020/"&gt;there's at least one obvious way to do it&lt;/a&gt;. &lt;/p&gt;
&lt;h2&gt;Vive La R√©volution üèÅ&lt;/h2&gt;
&lt;p&gt;I've heard &lt;a href="https://noumenal.es/"&gt;Carlton Gibson&lt;/a&gt; say at least once on &lt;a href="https://djangochat.com/"&gt;Django Chat&lt;/a&gt; that software development is currently like writing was 500 years ago: the average person would go pay a scribe to write out a letter for them, then they'd send it. But things didn't stay that way: people learned to write for themselves. Today, in the West and in many other wealthier countries, literacy rates are essentially 100%. &lt;em&gt;Everyone&lt;/em&gt; can write. That doesn't mean that everyone is &lt;em&gt;good&lt;/em&gt; at writing, that doesn't mean everyone &lt;em&gt;enjoys&lt;/em&gt; writing, and that doesn't mean that we no longer have a need for professional writers. We have more professional writers than we've ever had. What it means, though, is that when someone needs to write a letter, he can do it himself, without having to pay a scribe to do it. When someone needs to read an important document, he can do so with his own eyes, and he can fill out a form with his own hand.&lt;/p&gt;
&lt;p&gt;We're in the &lt;em&gt;middle&lt;/em&gt; of a technological revolution&amp;mdash;it isn't over yet. Yes, everyone (again, at least in the West and other wealthier places) has a smartphone in their pocket, or a laptop in their backpack, or at least a computer down at the library that they can use each day. But not everyone can program&amp;mdash;not everyone has fluency in the language of the machines they use.&lt;/p&gt;
&lt;p&gt;&lt;a href="https://alsweigart.com/"&gt;Al Sweigart&lt;/a&gt; said something once that struck me as quite profound: people are limited by using software other people wrote. There are two kinds of people: those who look at a computer and say, "Wow, what an advanced machine, full of all this powerful software!" and those who say, "I can make this machine do &lt;em&gt;anything.&lt;/em&gt;" The former are users; the latter, programmers. And Python is the most effective language yet at making users into programmers.&lt;/p&gt;</content><category term="Python"></category></entry><entry><title>Confessions of a Linux Grandpa: An Oral History #1</title><link href="https://james.walters.click/confessions-of-a-linux-grandpa-an-oral-history-1.html" rel="alternate"></link><published>2022-09-13T00:00:00-04:00</published><updated>2022-09-13T00:00:00-04:00</updated><author><name>James Walters</name></author><id>tag:james.walters.click,2022-09-13:/confessions-of-a-linux-grandpa-an-oral-history-1.html</id><summary type="html">&lt;h3&gt;Let me spin you a yarn... üß∂ üë¥&lt;/h3&gt;
&lt;p&gt;I'm known to at least one friend as his "Linux grandpa" (I'm fairly certain I coined this phrase myself). We met while working together at my current company. He was (and is) a sharp developer. I hadn't really started development yet, or perhaps more ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;h3&gt;Let me spin you a yarn... üß∂ üë¥&lt;/h3&gt;
&lt;p&gt;I'm known to at least one friend as his "Linux grandpa" (I'm fairly certain I coined this phrase myself). We met while working together at my current company. He was (and is) a sharp developer. I hadn't really started development yet, or perhaps more accurately, I had made several runs at &lt;a href="https://en.wikipedia.org/wiki/Lucy_Van_Pelt#Annual_football_strips"&gt;Lucy's football&lt;/a&gt; and wouldn't really have another go at it for some time. That made us both rather technically inclined, however.&lt;/p&gt;
&lt;p&gt;I don't remember exactly how we began talking about Linux. But somehow we did, and as those conversations unfolded, I realized I had witnessed quite a bit of history as a desktop Linux user.&lt;/p&gt;
&lt;p&gt;Now, I'm no neckbeard, mind you&amp;mdash;I'm not that old. I've yet to complete my third decade. I got into Linux in late 2007/early 2008, right as Ubuntu was really picking up steam. But still, that was &lt;em&gt;fifteen years ago,&lt;/em&gt; and a lot has happened in the Linux space in that span of time. &lt;/p&gt;
&lt;p&gt;So, if you have a moment, pull up a chair and listen to this first of many tales from the encompassing experiences of your Linux Grandpa. üêß üë¥&lt;/p&gt;
&lt;h3&gt;Open that window&lt;/h3&gt;
&lt;p&gt;Nobody starts as a Linux user, and neither did I. My first computer ran Windows 2000 (or perhaps, Windows ME). It had dial-up internet, and was perched upon a desk made of a sheet of plywood sawn into an L and stacked on top of &lt;a href="https://en.wikipedia.org/wiki/Milk_crate"&gt;milk crates&lt;/a&gt;. Eventually I wound up with an XP machine, and by this time, I had helped my dad build a computer or two, and I was old enough to begin taking a serious interest in the software that ran on them.&lt;/p&gt;
&lt;p&gt;I was quite curious about how the operating system actually worked. I was then and remain today oriented toward the bigger picture. It was this predilection that discouraged me from programming for many years, in fact. I thought I was cut out to be a system administrator, with that kind of a bent. At any rate, it was the OS layer that I found interesting, and as a youngster on Windows, poking around in the Control Panel gave a satisfying impression of how things worked. Then, I ascended to the monastic order of Power Users when I discovered the &lt;a href="http://dinesh.azurewebsites.net/hardwareandnetworking/Computer%20Networking%20-%20Lesson%208%20Administration_files/admintools1.gif"&gt;Administrative Tools&lt;/a&gt;. The Device Manager, the Registry&amp;mdash;it was all coming together.&lt;/p&gt;
&lt;p&gt;But then, I hit &lt;a href="https://www.youtube.com/watch?v=wKY_Bh53YDE"&gt;the wall&lt;/a&gt;. You know, &lt;a href="https://getyarn.io/yarn-clip/ea3fd0e0-d478-47b3-9353-24449ab7a00e"&gt;the curtain&lt;/a&gt;. The point in Windows where you can't peer any further into how the system works, how it's put together. I hadn't begun to exhaust the secrets of Windows&amp;mdash;there are whole industries and hobbyist groups built around a deep understanding of how it works. But for a kid in his bedroom poking around inside Windows itself, I'd gone about as far as I could go.&lt;/p&gt;
&lt;h3&gt;&lt;a href="https://www.youtube.com/watch?v=IxJUN6MCnKM"&gt;I don't like apples&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;It was time to turn to an alternative operating system, something that might let me have more of a peek under the hood. So I turned to the only other operating system I had heard of&amp;mdash;Mac OS.&lt;/p&gt;
&lt;p&gt;Now, all but immediately, I ran into a problem: I did not have a Mac, and Mac OS only comes on Macs. And being a gradeschooler, I did not have disposable income&amp;mdash;certainly not Apple levels of disposable income&amp;mdash;to spend on such a thing. So, I found another solution.&lt;/p&gt;
&lt;p&gt;By this time, I had my own laptop: a Toshiba Satellite A205-S5804. I still have it today&amp;mdash;I keep it as a relic of an age when Toshiba still made laptops. It has one of the best laptop keyboards I've ever used, not because it's especially good, but because back then laptop keyboards didn't suck. &lt;/p&gt;
&lt;p&gt;The reason I remember that model number exactly is because I found a forum post that someone had written for making my &lt;em&gt;exact&lt;/em&gt; model of laptop into a Hackintosh. I dutifully followed those instructions, and sure enough, I had Mac OS (I believe this was Leopard, at the time) running on my laptop. And it took me all of perhaps a few days to tire of that ground-breaking experience, since Mac OS is locked down tighter than Windows is, especially when shoehorned onto non-Apple hardware. It was a novelty, but it was clear I wouldn't do or learn anything productive with such a machine.&lt;/p&gt;
&lt;h3&gt;African Names and Antarctic Mascots&lt;/h3&gt;
&lt;p&gt;Disappointed and desperate, I took to the internet, hoping for some other option. I had heard whispers of a thing called Linux, but had read "Oh, it's just for servers" and the like. I discovered that there's no such thing as "a Linux", but there are &lt;em&gt;distributions&lt;/em&gt; of Linux. I didn't even really understand what a kernel was&amp;mdash;I just understood that it was the core around which all these other operating systems were built. It was a lot to muck through, but it was &lt;em&gt;there.&lt;/em&gt; The information was out there on the internet, and as long as I was willing, I could find it and read it and understand whatever I could, and keep going.&lt;/p&gt;
&lt;p&gt;Searches around which distro to start with were, by this point in history, turning up Ubuntu, a new distro that put some nice spit-and-polish on Debian and made it more usable. "&lt;a href="https://www.reddit.com/r/Ubuntu/comments/77gcn4/does_ubuntu_still_use_linux_for_human_beings_as/"&gt;Linux for human beings&lt;/a&gt;," they called it. It was named after an African word that everyone struggles to pronounce.&lt;/p&gt;
&lt;p&gt;As I said above, this was late 2007/early 2008&amp;mdash;this date is made rather secure by the fact that my first Ubuntu version was 7.10, Gutsy Gibbon. You don't just forget your first Linux distro when it's called &lt;em&gt;Gutsy.&lt;/em&gt; When I first installed it, everything worked except the wireless card, a common problem back in those days. I had to use &lt;a href="https://en.wikipedia.org/wiki/NDISwrapper"&gt;&lt;code&gt;ndis-wrapper&lt;/code&gt;&lt;/a&gt; around the Windows driver to get it working. But on the following release, 8.04 Hardy Heron, it worked out of the box.&lt;/p&gt;
&lt;p&gt;It was nice! It was new! It was interesting! And it was open&amp;mdash;a guarantee that any time spent trying to understanding this system would not be wasted.&lt;/p&gt;
&lt;p&gt;And as for the lessons I learned? Well &lt;a href="https://en.wikipedia.org/wiki/Sparky"&gt;Sparky&lt;/a&gt;, that's a story for next time. For now, enjoy yourself a Werther's Original. &lt;/p&gt;
&lt;p&gt;(since this is the internet, it'll have to be an ASCII Original)&lt;/p&gt;
&lt;p&gt;&lt;img alt="ASCII Original" src="https://james.walters.click/images/asciioriginal.png"&gt;&lt;/p&gt;
&lt;footer style="text-align: center;font-weight: bold;"&gt;
&lt;a href="https://james.walters.click/tag/linux-grandpa.html"&gt;Tell me another story&lt;/a&gt;, Grandpa!
&lt;/footer&gt;</content><category term="Linux"></category><category term="Linux Grandpa"></category><category term="oral histories"></category></entry><entry><title>Oh no, not another dev blog</title><link href="https://james.walters.click/oh-no-not-another-dev-blog.html" rel="alternate"></link><published>2022-09-13T00:00:00-04:00</published><updated>2022-09-13T00:00:00-04:00</updated><author><name>James Walters</name></author><id>tag:james.walters.click,2022-09-13:/oh-no-not-another-dev-blog.html</id><summary type="html">&lt;p&gt;Hi there! üëã&lt;/p&gt;
&lt;p&gt;I'm James, and I've decided to start a dev blog. It's a bit of a clich√©, I know, but for me I think it will be a fruitful exercise. I like writing, and I've tried blogging over the years, but I've never really found a good fit for ‚Ä¶&lt;/p&gt;</summary><content type="html">&lt;p&gt;Hi there! üëã&lt;/p&gt;
&lt;p&gt;I'm James, and I've decided to start a dev blog. It's a bit of a clich√©, I know, but for me I think it will be a fruitful exercise. I like writing, and I've tried blogging over the years, but I've never really found a good fit for something to talk about.&lt;/p&gt;
&lt;p&gt;Programming will be a good fit, I think. This is a new foray for me&amp;mdash;I've been doing development for about a year now, and my first big project at work is well on its way to rolling out next quarter. It's been exciting, and it's been a lot of work. But when I've been coding for 8-10 hours straight and I need a break, or when I need a &lt;a href="https://en.wikipedia.org/wiki/Rubber_duck_debugging"&gt;rubber duck&lt;/a&gt;, or when I &lt;em&gt;want&lt;/em&gt; to code but I shouldn't because I'm being obsessive, this will be a good outlet.&lt;/p&gt;
&lt;p&gt;I hope to share insights of mine that might benefit you, dear reader. Expect opinions as well, and reaches into tech more broadly on occasion. Such excursions are inevitable, but I'm mostly interested in programming here.&lt;/p&gt;
&lt;p&gt;There's no need to belabor introductions, so I'll leave it at that. See you in whatever I write next!&lt;/p&gt;</content><category term="Meta"></category></entry></feed>